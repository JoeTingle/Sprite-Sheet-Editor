<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="Sprite Sheet Editor" Height="600" Width="800" ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen">
        <!-- Adding additional imports and setting the title/dimensions of the window. Also setting it so that i can't be resized only minismised-->


    <Grid>

        <!-- Four main rows for controls -->
        <Grid.RowDefinitions>
            <RowDefinition Name="RowMenu" Height="22"/>
            <RowDefinition Name="RowMain" Height="*"/>
            <RowDefinition Name="RowControl" Height="60"/>
            <RowDefinition Name="RowStatus" Height="22"/>
        </Grid.RowDefinitions>

        <!-- Five columns for controls, with some controls spanning columns-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Create a Menu bar which starts in Row 0 and Column 0,
        then spans 5 columns -->
        <Menu Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5">
            <!-- Inside our menu bar we define our menu items
            in a nested heirarchy. -->
            <MenuItem Name="mnuFile" Header="_File">
                <!-- We can name our menu items appropriately
                to keep it clear what they are-->
                <!-- An underscore in the header means that the next letter
                should be underlined, and form the shortcut key for that item
                i.e. alt+F opens the file menu, then alt+n creates a new file -->
                <MenuItem Name="mnuFileNew" Header="_New" Click="BtnFileNew_Click" />
                <!--New, creates a new blank sprite for the user to edit/move-->
                <MenuItem Name="mnuFileOpen" Header="_Open" Click="BtnLoad_Click"/>
                <!--Gives the user a dialog box to choose an image to load into the editor, as a new sprite-->
                <MenuItem Name="mnuFileSave" Header="_Save" Click="BtnSave_Click"/>
                <!--Will save the current look on the canvas as test.jpg to the desktop-->
                <MenuItem Name="mnuFileSaveas" Header="Save _As" Click="BtnSaveAs_Click"/>
                <!--Gives the user a file dialog to choose a directory to save to and as what file type-->
                <MenuItem Name="mnuFileExit" Header="E_xit" Click="MnuFileExit_Click"/>
                <!--Calls the function to close the program completely-->
            </MenuItem>
            <MenuItem Name="mnuEdit" Header="E_dit">
                <MenuItem Name="mnuEditCut" Header="_Cut" Click="BtnEditCut_Click"/>
                <MenuItem Name="mnuEditCopy" Header="C_opy" Click="BtnEditCopy_Click"/>
                <MenuItem Name="mnuEditPaste" Header="_Paste" Click="BtnEditPaste_Click"/>
                <!--Allows The User To Use CLipboard Commands-->
            </MenuItem>
            <MenuItem Name="mnuHelp" Header="_About">
                <MenuItem Name="mnuHelpAbout" Header="A_bout" Click="MnuHelpAbout_Click"/>
                <!--Displays a box up box with information about the program-->
            </MenuItem>
        </Menu>

        <!-- Our border, around an image,
        giving it a clear black border to delineate where our image is-->
        <Border Name="imgBorder" Background="White" BorderBrush="Black" BorderThickness="1"  Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4">
            <Grid>
                <!--Added in a zoombox from Extended WPF toolkit to allow the user to zoom and pan around the canvas-->
                <xctk:Zoombox MinScale="0.5" MaxScale="100">
                    <Image x:Name="MainImage"   MouseMove="ImgMain_MouseMove" MouseDown="ImgMain_MouseDown" MouseUp="ImgMain_MouseUp"/>
                </xctk:Zoombox>
            </Grid>

        </Border>

        <!-- Define our buttons in stackpanels, so that they will sit on top
        of each other, add margins to space them out nicely -->
        <StackPanel Grid.Row="2" Grid.Column="0">
            <!--User can select between either drawing on the canvas or moving the current sprite-->
            <Button Name="drawbtn" Margin="5, 2.5" Click="Drawbtn_Click">Draw</Button>
            <Button Name="movebtn" Margin="5, 2.5" Click="Movebtn_Click">Move</Button>
        </StackPanel>
        <StackPanel Grid.Row="2" Grid.Column="1">
            <!--Fills the canvas with the currently selected colour-->
            <Button Name="btnCanvasFill" Margin="5, 2.5" Click="BtnCanvasFill_Click">Canvas Fill</Button>
            <!--Adds a new layer/sprite to the viewmodel-->
            <Button Name="btnFour" Margin="5, 2.5" Click="AddNewLayer">Add New Layer</Button>
        </StackPanel>
        <StackPanel Grid.Row="2" Grid.Column="2" VerticalAlignment="Center">
            <!--Removes the currently selected layer/sprite from the viewmodel-->
            <Button Name="btnSix" Margin="5, 2.5" Click="RemoveNewLayer">Delete Current Layer</Button>
            <TextBlock Margin="0,0,-315,0">Info: SHIFT + MOUSE WHEEL To Zoom, CTRL + LEFT CLICK To Pan</TextBlock>
        </StackPanel>


        <!-- Our two list boxes, one vertical on the right hand side,
        and one horizontal spanning two columns on the lower right hand side -->

        <ListBox Name="ListView" Grid.Row="1" Grid.Column="4" SelectionChanged="ListView_SelectionChanged" ItemsSource="{Binding SpriteList, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,210" HorizontalAlignment="Left" Width="159">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Width="16" Height="16" Source="{Binding Path=Path}" />
                        <TextBlock Text="{Binding Path=Name}" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!-- And Finally our status bar, at the bottom of the screen,
        with two spaces for U V Coordinates -->
        <StatusBar Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="5">
            <StatusBarItem x:Name="stbU">
                <TextBlock Name="XPos" />
            </StatusBarItem>
            <StatusBarItem x:Name="stbV">
                <TextBlock Name="YPos" />
            </StatusBarItem>
            <StatusBarItem x:Name="currentMode">
                <TextBlock Name="currentModeTxt" HorizontalAlignment="Right" Width="776"/>
            </StatusBarItem>

        </StatusBar>
        <!--Colour picker from Extended WPF Toolkit, allows the user to choose from all RGB colours-->
        <xctk:ColorPicker x:Name="ClrPcker_Background" Grid.Column="4" SelectedColorChanged="ClrPcker_Background_SelectedColorChanged" Margin="0,263,0,0" Grid.Row="1" DisplayColorAndName="True" VerticalAlignment="Top"/>
    </Grid>
</Window>